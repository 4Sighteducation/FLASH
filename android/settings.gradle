pluginManagement {
  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
  }
  // Include the RN gradle plugin as a build (required for RN 0.75+)
  includeBuild(new File(
    ["node","--print","require.resolve('@react-native/gradle-plugin/package.json')"]
      .execute(null, rootDir).text.trim()
  ).getParentFile())
  // Include expo-modules-core as a build ONLY for the plugin, under a unique name
  includeBuild(new File(
    ["node","--print","require.resolve('expo-modules-core/package.json')"]
      .execute(null, rootDir).text.trim()
  ).getParentFile()) {
    name = "expo-modules-core-plugin" // avoid name collision with :expo-modules-core project
  }
}

plugins {
  // Load the RN settings plugin (lets RN configure catalogs, etc.)
  id("com.facebook.react.settings")
}

dependencyResolutionManagement {
  repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
  repositories {
    google()
    mavenCentral()
  }
  // Load RN's version catalog so plugin/deps get proper versions
  versionCatalogs {
    create("libs") {
      def rnPluginDir = new File(
        ["node","--print","require.resolve('@react-native/gradle-plugin/package.json')"]
          .execute(null, rootDir).text.trim()
      ).getParentFile()
      from(files(new File(rnPluginDir, "../gradle/libs.versions.toml")))
    }
  }
}

rootProject.name = "FLASH"

apply from: new File(
  ["node","--print","require.resolve('expo/package.json')"]
    .execute(null, rootDir).text.trim(),
  "../scripts/autolinking.gradle"
)

// Autolink Expo/React Native modules as normal
useExpoModules()

// RN < 0.75 compatibility (kept guarded; harmless if 0.75+)
if (providers.exec {
      commandLine("node","-e","console.log(require('react-native/package.json').version)")
    }.standardOutput.asText.get().trim().split('\\.')[1].toInteger() < 75) {
  apply from: new File(
    ["node","--print","require.resolve('@react-native-community/cli-platform-android/package.json')"]
      .execute(null, rootDir).text.trim(),
    "../native_modules.gradle"
  )
  applyNativeModulesSettingsGradle(settings)
}

include(":app")
